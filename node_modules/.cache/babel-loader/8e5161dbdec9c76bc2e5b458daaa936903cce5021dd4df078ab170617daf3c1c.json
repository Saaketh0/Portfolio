{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ParticleBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const shapesRef = useRef(null);\n  const animationIdRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create subtle, low-contrast abstract shapes\n    const shapes = [];\n\n    // Create organic, fluid blob shapes\n    const blobCount = 12;\n    for (let i = 0; i < blobCount; i++) {\n      const blobGeometry = new THREE.SphereGeometry(1 + Math.random() * 2,\n      // Random size\n      8 + Math.floor(Math.random() * 8),\n      // Low polygon count for subtlety\n      6 + Math.floor(Math.random() * 6));\n\n      // Deform the sphere to create organic shapes\n      const positions = blobGeometry.attributes.position.array;\n      for (let j = 0; j < positions.length; j += 3) {\n        const x = positions[j];\n        const y = positions[j + 1];\n        const z = positions[j + 2];\n\n        // Add subtle organic deformation\n        const noise = Math.sin(x * 2 + i) * Math.cos(y * 2 + i) * Math.sin(z * 2 + i) * 0.3;\n        positions[j] += noise;\n        positions[j + 1] += noise;\n        positions[j + 2] += noise;\n      }\n      blobGeometry.computeVertexNormals();\n\n      // Very subtle, low-contrast material\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x1a1a1a,\n        // Very dark grey\n        transparent: true,\n        opacity: 0.15 + Math.random() * 0.1,\n        // Very low opacity\n        side: THREE.DoubleSide\n      });\n      const blob = new THREE.Mesh(blobGeometry, material);\n      blob.position.set((Math.random() - 0.5) * 40, (Math.random() - 0.5) * 30, (Math.random() - 0.5) * 20);\n      blob.rotation.set(Math.random() * Math.PI, Math.random() * Math.PI, Math.random() * Math.PI);\n      scene.add(blob);\n      shapes.push(blob);\n    }\n\n    // Create subtle outline shapes\n    const outlineCount = 8;\n    for (let i = 0; i < outlineCount; i++) {\n      const outlineGeometry = new THREE.RingGeometry(1 + Math.random() * 3, 2 + Math.random() * 4, 16 + Math.floor(Math.random() * 16));\n      const outlineMaterial = new THREE.MeshBasicMaterial({\n        color: 0x2a2a2a,\n        // Slightly lighter dark grey\n        transparent: true,\n        opacity: 0.08 + Math.random() * 0.07,\n        // Very low opacity\n        side: THREE.DoubleSide,\n        wireframe: false\n      });\n      const outline = new THREE.Mesh(outlineGeometry, outlineMaterial);\n      outline.position.set((Math.random() - 0.5) * 35, (Math.random() - 0.5) * 25, (Math.random() - 0.5) * 15);\n      outline.rotation.x = Math.PI / 2;\n      scene.add(outline);\n      shapes.push(outline);\n    }\n\n    // Create some irregular disc shapes with inner rings\n    const discCount = 6;\n    for (let i = 0; i < discCount; i++) {\n      // Outer disc\n      const outerGeometry = new THREE.CircleGeometry(2 + Math.random() * 3, 32);\n      const outerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x1f1f1f,\n        // Very dark grey\n        transparent: true,\n        opacity: 0.12 + Math.random() * 0.08,\n        side: THREE.DoubleSide\n      });\n      const outerDisc = new THREE.Mesh(outerGeometry, outerMaterial);\n      outerDisc.position.set((Math.random() - 0.5) * 30, (Math.random() - 0.5) * 20, (Math.random() - 0.5) * 10);\n      outerDisc.rotation.x = Math.PI / 2;\n      scene.add(outerDisc);\n      shapes.push(outerDisc);\n\n      // Inner ring\n      const innerGeometry = new THREE.RingGeometry(0.5, 1 + Math.random() * 1.5, 24);\n      const innerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x333333,\n        // Slightly lighter grey for inner ring\n        transparent: true,\n        opacity: 0.1 + Math.random() * 0.05,\n        side: THREE.DoubleSide\n      });\n      const innerRing = new THREE.Mesh(innerGeometry, innerMaterial);\n      innerRing.position.copy(outerDisc.position);\n      innerRing.rotation.copy(outerDisc.rotation);\n      scene.add(innerRing);\n      shapes.push(innerRing);\n    }\n    shapesRef.current = shapes;\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop - very subtle movement\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      if (shapesRef.current) {\n        // Very subtle, slow movement\n        shapesRef.current.forEach((shape, index) => {\n          // Extremely slow rotation\n          shape.rotation.x += 0.0002 + Math.random() * 0.0003;\n          shape.rotation.y += 0.0003 + Math.random() * 0.0002;\n          shape.rotation.z += 0.0001 + Math.random() * 0.0002;\n\n          // Very subtle position drift\n          shape.position.x += Math.sin(Date.now() * 0.0001 + index) * 0.002;\n          shape.position.y += Math.cos(Date.now() * 0.0001 + index) * 0.0015;\n          shape.position.z += Math.sin(Date.now() * 0.0001 + index * 0.5) * 0.001;\n\n          // Keep shapes within bounds\n          if (shape.position.x > 25) shape.position.x = -25;\n          if (shape.position.x < -25) shape.position.x = 25;\n          if (shape.position.y > 20) shape.position.y = -20;\n          if (shape.position.y < -20) shape.position.y = 20;\n          if (shape.position.z > 15) shape.position.z = -15;\n          if (shape.position.z < -15) shape.position.z = 15;\n        });\n      }\n\n      // Extremely subtle camera movement\n      camera.position.x = Math.sin(Date.now() * 0.00001) * 0.2;\n      camera.position.y = Math.cos(Date.now() * 0.000008) * 0.1;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"i0DQi1tZbiwSt+aU172odR9BSi0=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ParticleBackground","_s","mountRef","sceneRef","rendererRef","shapesRef","animationIdRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","shapes","blobCount","i","blobGeometry","SphereGeometry","random","floor","positions","attributes","array","j","length","x","y","z","noise","sin","cos","computeVertexNormals","material","MeshBasicMaterial","color","transparent","opacity","side","DoubleSide","blob","Mesh","rotation","PI","add","push","outlineCount","outlineGeometry","RingGeometry","outlineMaterial","wireframe","outline","discCount","outerGeometry","CircleGeometry","outerMaterial","outerDisc","innerGeometry","innerMaterial","innerRing","copy","appendChild","domElement","animate","requestAnimationFrame","forEach","shape","index","Date","now","render","handleResize","aspect","updateProjectionMatrix","addEventListener","currentMount","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ParticleBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ParticleBackground = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const shapesRef = useRef(null);\n  const animationIdRef = useRef(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create subtle, low-contrast abstract shapes\n    const shapes = [];\n    \n    // Create organic, fluid blob shapes\n    const blobCount = 12;\n    for (let i = 0; i < blobCount; i++) {\n      const blobGeometry = new THREE.SphereGeometry(\n        1 + Math.random() * 2, // Random size\n        8 + Math.floor(Math.random() * 8), // Low polygon count for subtlety\n        6 + Math.floor(Math.random() * 6)\n      );\n      \n      // Deform the sphere to create organic shapes\n      const positions = blobGeometry.attributes.position.array;\n      for (let j = 0; j < positions.length; j += 3) {\n        const x = positions[j];\n        const y = positions[j + 1];\n        const z = positions[j + 2];\n        \n        // Add subtle organic deformation\n        const noise = Math.sin(x * 2 + i) * Math.cos(y * 2 + i) * Math.sin(z * 2 + i) * 0.3;\n        positions[j] += noise;\n        positions[j + 1] += noise;\n        positions[j + 2] += noise;\n      }\n      \n      blobGeometry.computeVertexNormals();\n      \n      // Very subtle, low-contrast material\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x1a1a1a, // Very dark grey\n        transparent: true,\n        opacity: 0.15 + Math.random() * 0.1, // Very low opacity\n        side: THREE.DoubleSide\n      });\n      \n      const blob = new THREE.Mesh(blobGeometry, material);\n      blob.position.set(\n        (Math.random() - 0.5) * 40,\n        (Math.random() - 0.5) * 30,\n        (Math.random() - 0.5) * 20\n      );\n      blob.rotation.set(\n        Math.random() * Math.PI,\n        Math.random() * Math.PI,\n        Math.random() * Math.PI\n      );\n      \n      scene.add(blob);\n      shapes.push(blob);\n    }\n\n    // Create subtle outline shapes\n    const outlineCount = 8;\n    for (let i = 0; i < outlineCount; i++) {\n      const outlineGeometry = new THREE.RingGeometry(\n        1 + Math.random() * 3,\n        2 + Math.random() * 4,\n        16 + Math.floor(Math.random() * 16)\n      );\n      \n      const outlineMaterial = new THREE.MeshBasicMaterial({\n        color: 0x2a2a2a, // Slightly lighter dark grey\n        transparent: true,\n        opacity: 0.08 + Math.random() * 0.07, // Very low opacity\n        side: THREE.DoubleSide,\n        wireframe: false\n      });\n      \n      const outline = new THREE.Mesh(outlineGeometry, outlineMaterial);\n      outline.position.set(\n        (Math.random() - 0.5) * 35,\n        (Math.random() - 0.5) * 25,\n        (Math.random() - 0.5) * 15\n      );\n      outline.rotation.x = Math.PI / 2;\n      \n      scene.add(outline);\n      shapes.push(outline);\n    }\n\n    // Create some irregular disc shapes with inner rings\n    const discCount = 6;\n    for (let i = 0; i < discCount; i++) {\n      // Outer disc\n      const outerGeometry = new THREE.CircleGeometry(2 + Math.random() * 3, 32);\n      const outerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x1f1f1f, // Very dark grey\n        transparent: true,\n        opacity: 0.12 + Math.random() * 0.08,\n        side: THREE.DoubleSide\n      });\n      \n      const outerDisc = new THREE.Mesh(outerGeometry, outerMaterial);\n      outerDisc.position.set(\n        (Math.random() - 0.5) * 30,\n        (Math.random() - 0.5) * 20,\n        (Math.random() - 0.5) * 10\n      );\n      outerDisc.rotation.x = Math.PI / 2;\n      \n      scene.add(outerDisc);\n      shapes.push(outerDisc);\n      \n      // Inner ring\n      const innerGeometry = new THREE.RingGeometry(0.5, 1 + Math.random() * 1.5, 24);\n      const innerMaterial = new THREE.MeshBasicMaterial({\n        color: 0x333333, // Slightly lighter grey for inner ring\n        transparent: true,\n        opacity: 0.1 + Math.random() * 0.05,\n        side: THREE.DoubleSide\n      });\n      \n      const innerRing = new THREE.Mesh(innerGeometry, innerMaterial);\n      innerRing.position.copy(outerDisc.position);\n      innerRing.rotation.copy(outerDisc.rotation);\n      \n      scene.add(innerRing);\n      shapes.push(innerRing);\n    }\n\n    shapesRef.current = shapes;\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop - very subtle movement\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      if (shapesRef.current) {\n        // Very subtle, slow movement\n        shapesRef.current.forEach((shape, index) => {\n          // Extremely slow rotation\n          shape.rotation.x += 0.0002 + Math.random() * 0.0003;\n          shape.rotation.y += 0.0003 + Math.random() * 0.0002;\n          shape.rotation.z += 0.0001 + Math.random() * 0.0002;\n          \n          // Very subtle position drift\n          shape.position.x += Math.sin(Date.now() * 0.0001 + index) * 0.002;\n          shape.position.y += Math.cos(Date.now() * 0.0001 + index) * 0.0015;\n          shape.position.z += Math.sin(Date.now() * 0.0001 + index * 0.5) * 0.001;\n          \n          // Keep shapes within bounds\n          if (shape.position.x > 25) shape.position.x = -25;\n          if (shape.position.x < -25) shape.position.x = 25;\n          if (shape.position.y > 20) shape.position.y = -20;\n          if (shape.position.y < -20) shape.position.y = 20;\n          if (shape.position.z > 15) shape.position.z = -15;\n          if (shape.position.z < -15) shape.position.z = 15;\n        });\n      }\n\n      // Extremely subtle camera movement\n      camera.position.x = Math.sin(Date.now() * 0.00001) * 0.2;\n      camera.position.y = Math.cos(Date.now() * 0.000008) * 0.1;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ParticleBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}