{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ParticleBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const particlesRef = useRef(null);\n  const terrainRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create 3D terrain (landscape)\n    const terrainGeometry = new THREE.PlaneGeometry(40, 40, 50, 50);\n    const terrainMaterial = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      // Black terrain\n      transparent: true,\n      opacity: 0.15,\n      wireframe: true\n    });\n\n    // Add some terrain variation\n    const vertices = terrainGeometry.attributes.position.array;\n    for (let i = 0; i < vertices.length; i += 3) {\n      const x = vertices[i];\n      const z = vertices[i + 2];\n      vertices[i + 1] = Math.sin(x * 0.5) * Math.cos(z * 0.5) * 2;\n    }\n    const terrain = new THREE.Mesh(terrainGeometry, terrainMaterial);\n    terrain.rotation.x = -Math.PI / 2;\n    terrain.position.y = -5;\n    scene.add(terrain);\n    terrainRef.current = terrain;\n\n    // Create drifting particles (like pixels from the background)\n    const particleCount = 1200;\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const velocities = new Float32Array(particleCount * 3);\n    const sizes = new Float32Array(particleCount);\n    for (let i = 0; i < particleCount * 3; i += 3) {\n      // Spread particles across the landscape\n      positions[i] = (Math.random() - 0.5) * 40; // x\n      positions[i + 1] = Math.random() * 10 - 2; // y (above and below terrain)\n      positions[i + 2] = (Math.random() - 0.5) * 40; // z\n\n      // Random velocities for drifting effect\n      velocities[i] = (Math.random() - 0.5) * 0.02; // x drift\n      velocities[i + 1] = (Math.random() - 0.5) * 0.01; // y drift\n      velocities[i + 2] = (Math.random() - 0.5) * 0.02; // z drift\n\n      // Random sizes for variety\n      sizes[i / 3] = Math.random() * 0.05 + 0.01;\n\n      // Colors that match your new color scheme\n      const colorVariations = [[0.0, 0.0, 0.0],\n      // #000000 (black - primary)\n      [1.0, 0.843, 0.0],\n      // #FFD700 (gold - secondary)\n      [0.8, 0.674, 0.0],\n      // #CCAC00 (darker gold)\n      [1.0, 0.9, 0.2],\n      // #FFE533 (lighter gold)\n      [1.0, 1.0, 1.0],\n      // #FFFFFF (white - tertiary)\n      [0.9, 0.9, 0.9],\n      // #E6E6E6 (light gray)\n      [0.8, 0.8, 0.8],\n      // #CCCCCC (medium gray)\n      [0.6, 0.6, 0.6] // #999999 (dark gray)\n      ];\n\n      const colorIndex = Math.floor(Math.random() * colorVariations.length);\n      colors[i] = colorVariations[colorIndex][0];\n      colors[i + 1] = colorVariations[colorIndex][1];\n      colors[i + 2] = colorVariations[colorIndex][2];\n    }\n    const particleGeometry = new THREE.BufferGeometry();\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    particleGeometry.setAttribute('size', new THREE.BufferAttribute(sizes, 1));\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 1,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.8,\n      sizeAttenuation: true,\n      blending: THREE.AdditiveBlending\n    });\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particles);\n    particlesRef.current = particles;\n\n    // Mouse interaction\n    const handleMouseMove = event => {\n      mouseRef.current.x = event.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      if (particlesRef.current) {\n        const positions = particlesRef.current.geometry.attributes.position.array;\n\n        // Update particle positions for drifting effect\n        for (let i = 0; i < positions.length; i += 3) {\n          // Add drifting motion\n          positions[i] += velocities[i];\n          positions[i + 1] += velocities[i + 2];\n          positions[i + 2] += velocities[i + 1];\n\n          // Keep particles within bounds\n          if (positions[i] > 20) positions[i] = -20;\n          if (positions[i] < -20) positions[i] = 20;\n          if (positions[i + 1] > 8) positions[i + 1] = -2;\n          if (positions[i + 1] < -2) positions[i + 1] = 8;\n          if (positions[i + 2] > 20) positions[i + 2] = -20;\n          if (positions[i + 2] < -20) positions[i + 2] = 20;\n\n          // Mouse interaction - particles gently move toward mouse\n          const mouseInfluence = 0.005;\n          const dx = mouseRef.current.x * 20 - positions[i];\n          const dy = mouseRef.current.y * 10 - positions[i + 1];\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          if (distanceToMouse < 8) {\n            const force = (8 - distanceToMouse) * mouseInfluence;\n            positions[i] += dx * force;\n            positions[i + 1] += dy * force;\n          }\n        }\n        particlesRef.current.geometry.attributes.position.needsUpdate = true;\n\n        // Gentle terrain rotation\n        if (terrainRef.current) {\n          terrainRef.current.rotation.y += 0.001;\n        }\n      }\n\n      // Subtle camera movement for parallax effect\n      camera.position.x = Math.sin(Date.now() * 0.00003) * 1;\n      camera.position.y = Math.cos(Date.now() * 0.00002) * 0.5;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"5WIWgZI2iOY5U8+lqwuso4czWMY=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ParticleBackground","_s","mountRef","sceneRef","rendererRef","particlesRef","terrainRef","animationIdRef","mouseRef","x","y","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","terrainGeometry","PlaneGeometry","terrainMaterial","MeshBasicMaterial","color","transparent","opacity","wireframe","vertices","attributes","array","i","length","z","sin","cos","terrain","Mesh","rotation","PI","add","particleCount","positions","Float32Array","colors","velocities","sizes","random","colorVariations","colorIndex","floor","particleGeometry","BufferGeometry","setAttribute","BufferAttribute","particleMaterial","PointsMaterial","size","vertexColors","sizeAttenuation","blending","AdditiveBlending","particles","Points","handleMouseMove","event","clientX","clientY","addEventListener","appendChild","domElement","animate","requestAnimationFrame","geometry","mouseInfluence","dx","dy","distanceToMouse","sqrt","force","needsUpdate","Date","now","render","handleResize","aspect","updateProjectionMatrix","currentMount","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ParticleBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ParticleBackground = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const particlesRef = useRef(null);\n  const terrainRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create 3D terrain (landscape)\n    const terrainGeometry = new THREE.PlaneGeometry(40, 40, 50, 50);\n    const terrainMaterial = new THREE.MeshBasicMaterial({\n      color: 0x000000, // Black terrain\n      transparent: true,\n      opacity: 0.15,\n      wireframe: true\n    });\n    \n    // Add some terrain variation\n    const vertices = terrainGeometry.attributes.position.array;\n    for (let i = 0; i < vertices.length; i += 3) {\n      const x = vertices[i];\n      const z = vertices[i + 2];\n      vertices[i + 1] = Math.sin(x * 0.5) * Math.cos(z * 0.5) * 2;\n    }\n    \n    const terrain = new THREE.Mesh(terrainGeometry, terrainMaterial);\n    terrain.rotation.x = -Math.PI / 2;\n    terrain.position.y = -5;\n    scene.add(terrain);\n    terrainRef.current = terrain;\n\n    // Create drifting particles (like pixels from the background)\n    const particleCount = 1200;\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const velocities = new Float32Array(particleCount * 3);\n    const sizes = new Float32Array(particleCount);\n\n    for (let i = 0; i < particleCount * 3; i += 3) {\n      // Spread particles across the landscape\n      positions[i] = (Math.random() - 0.5) * 40; // x\n      positions[i + 1] = Math.random() * 10 - 2; // y (above and below terrain)\n      positions[i + 2] = (Math.random() - 0.5) * 40; // z\n\n      // Random velocities for drifting effect\n      velocities[i] = (Math.random() - 0.5) * 0.02; // x drift\n      velocities[i + 1] = (Math.random() - 0.5) * 0.01; // y drift\n      velocities[i + 2] = (Math.random() - 0.5) * 0.02; // z drift\n\n      // Random sizes for variety\n      sizes[i / 3] = Math.random() * 0.05 + 0.01;\n\n      // Colors that match your new color scheme\n      const colorVariations = [\n        [0.0, 0.0, 0.0],        // #000000 (black - primary)\n        [1.0, 0.843, 0.0],      // #FFD700 (gold - secondary)\n        [0.8, 0.674, 0.0],      // #CCAC00 (darker gold)\n        [1.0, 0.9, 0.2],        // #FFE533 (lighter gold)\n        [1.0, 1.0, 1.0],        // #FFFFFF (white - tertiary)\n        [0.9, 0.9, 0.9],        // #E6E6E6 (light gray)\n        [0.8, 0.8, 0.8],        // #CCCCCC (medium gray)\n        [0.6, 0.6, 0.6]         // #999999 (dark gray)\n      ];\n      const colorIndex = Math.floor(Math.random() * colorVariations.length);\n      colors[i] = colorVariations[colorIndex][0];\n      colors[i + 1] = colorVariations[colorIndex][1];\n      colors[i + 2] = colorVariations[colorIndex][2];\n    }\n\n    const particleGeometry = new THREE.BufferGeometry();\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    particleGeometry.setAttribute('size', new THREE.BufferAttribute(sizes, 1));\n\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 1,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.8,\n      sizeAttenuation: true,\n      blending: THREE.AdditiveBlending\n    });\n\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particles);\n    particlesRef.current = particles;\n\n    // Mouse interaction\n    const handleMouseMove = (event) => {\n      mouseRef.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      if (particlesRef.current) {\n        const positions = particlesRef.current.geometry.attributes.position.array;\n        \n        // Update particle positions for drifting effect\n        for (let i = 0; i < positions.length; i += 3) {\n          // Add drifting motion\n          positions[i] += velocities[i];\n          positions[i + 1] += velocities[i + 2];\n          positions[i + 2] += velocities[i + 1];\n\n          // Keep particles within bounds\n          if (positions[i] > 20) positions[i] = -20;\n          if (positions[i] < -20) positions[i] = 20;\n          if (positions[i + 1] > 8) positions[i + 1] = -2;\n          if (positions[i + 1] < -2) positions[i + 1] = 8;\n          if (positions[i + 2] > 20) positions[i + 2] = -20;\n          if (positions[i + 2] < -20) positions[i + 2] = 20;\n\n          // Mouse interaction - particles gently move toward mouse\n          const mouseInfluence = 0.005;\n          const dx = mouseRef.current.x * 20 - positions[i];\n          const dy = mouseRef.current.y * 10 - positions[i + 1];\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distanceToMouse < 8) {\n            const force = (8 - distanceToMouse) * mouseInfluence;\n            positions[i] += dx * force;\n            positions[i + 1] += dy * force;\n          }\n        }\n\n        particlesRef.current.geometry.attributes.position.needsUpdate = true;\n\n        // Gentle terrain rotation\n        if (terrainRef.current) {\n          terrainRef.current.rotation.y += 0.001;\n        }\n      }\n\n      // Subtle camera movement for parallax effect\n      camera.position.x = Math.sin(Date.now() * 0.00003) * 1;\n      camera.position.y = Math.cos(Date.now() * 0.00002) * 0.5;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ParticleBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}