{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ParticleBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const particlesRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create particles\n    const particleCount = 800; // Reduced for better performance\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const velocities = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount * 3; i += 3) {\n      // Random positions in a sphere\n      const radius = Math.random() * 15;\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.random() * Math.PI;\n      positions[i] = radius * Math.sin(phi) * Math.cos(theta);\n      positions[i + 1] = radius * Math.sin(phi) * Math.sin(theta);\n      positions[i + 2] = radius * Math.cos(phi);\n\n      // Random velocities for floating effect\n      velocities[i] = (Math.random() - 0.5) * 0.01;\n      velocities[i + 1] = (Math.random() - 0.5) * 0.01;\n      velocities[i + 2] = (Math.random() - 0.5) * 0.01;\n\n      // Random colors (purple theme)\n      const colorVariations = [[0.545, 0.361, 0.961],\n      // #8b5cf6\n      [0.659, 0.333, 0.969],\n      // #a855f7\n      [0.753, 0.518, 0.988],\n      // #c084fc\n      [0.847, 0.694, 0.996],\n      // #d8b4fe\n      [0.941, 0.871, 1.000] // #f0e7ff\n      ];\n\n      const colorIndex = Math.floor(Math.random() * colorVariations.length);\n      colors[i] = colorVariations[colorIndex][0];\n      colors[i + 1] = colorVariations[colorIndex][1];\n      colors[i + 2] = colorVariations[colorIndex][2];\n    }\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    const material = new THREE.PointsMaterial({\n      size: 0.03,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.7,\n      sizeAttenuation: true,\n      blending: THREE.AdditiveBlending\n    });\n    const particles = new THREE.Points(geometry, material);\n    scene.add(particles);\n    particlesRef.current = particles;\n\n    // Mouse interaction\n    const handleMouseMove = event => {\n      mouseRef.current.x = event.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      if (particlesRef.current) {\n        const positions = particlesRef.current.geometry.attributes.position.array;\n\n        // Update particle positions\n        for (let i = 0; i < positions.length; i += 3) {\n          // Add floating motion\n          positions[i] += velocities[i];\n          positions[i + 1] += velocities[i + 1];\n          positions[i + 2] += velocities[i + 2];\n\n          // Keep particles within bounds\n          const distance = Math.sqrt(positions[i] ** 2 + positions[i + 1] ** 2 + positions[i + 2] ** 2);\n          if (distance > 15) {\n            const scale = 15 / distance;\n            positions[i] *= scale;\n            positions[i + 1] *= scale;\n            positions[i + 2] *= scale;\n          }\n\n          // Mouse interaction - particles move away from mouse\n          const mouseInfluence = 0.1;\n          const dx = positions[i] - mouseRef.current.x * 10;\n          const dy = positions[i + 1] - mouseRef.current.y * 10;\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          if (distanceToMouse < 3) {\n            const force = (3 - distanceToMouse) * mouseInfluence;\n            positions[i] += dx * force;\n            positions[i + 1] += dy * force;\n          }\n        }\n        particlesRef.current.geometry.attributes.position.needsUpdate = true;\n\n        // Gentle rotation\n        particlesRef.current.rotation.x += 0.0005;\n        particlesRef.current.rotation.y += 0.001;\n      }\n\n      // Subtle camera movement\n      camera.position.x = Math.sin(Date.now() * 0.00005) * 0.3;\n      camera.position.y = Math.cos(Date.now() * 0.00005) * 0.2;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"oqDu/pLnb8m5WeqJr4icT42S/E4=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ParticleBackground","_s","mountRef","sceneRef","rendererRef","particlesRef","animationIdRef","mouseRef","x","y","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","particleCount","positions","Float32Array","colors","velocities","i","radius","random","theta","PI","phi","sin","cos","colorVariations","colorIndex","floor","length","geometry","BufferGeometry","setAttribute","BufferAttribute","material","PointsMaterial","size","vertexColors","transparent","opacity","sizeAttenuation","blending","AdditiveBlending","particles","Points","add","handleMouseMove","event","clientX","clientY","addEventListener","appendChild","domElement","animate","requestAnimationFrame","attributes","array","distance","sqrt","scale","mouseInfluence","dx","dy","distanceToMouse","force","needsUpdate","rotation","Date","now","render","handleResize","aspect","updateProjectionMatrix","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ParticleBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ParticleBackground = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const particlesRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create particles\n    const particleCount = 800; // Reduced for better performance\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    const velocities = new Float32Array(particleCount * 3);\n\n    for (let i = 0; i < particleCount * 3; i += 3) {\n      // Random positions in a sphere\n      const radius = Math.random() * 15;\n      const theta = Math.random() * Math.PI * 2;\n      const phi = Math.random() * Math.PI;\n\n      positions[i] = radius * Math.sin(phi) * Math.cos(theta);\n      positions[i + 1] = radius * Math.sin(phi) * Math.sin(theta);\n      positions[i + 2] = radius * Math.cos(phi);\n\n      // Random velocities for floating effect\n      velocities[i] = (Math.random() - 0.5) * 0.01;\n      velocities[i + 1] = (Math.random() - 0.5) * 0.01;\n      velocities[i + 2] = (Math.random() - 0.5) * 0.01;\n\n      // Random colors (purple theme)\n      const colorVariations = [\n        [0.545, 0.361, 0.961], // #8b5cf6\n        [0.659, 0.333, 0.969], // #a855f7\n        [0.753, 0.518, 0.988], // #c084fc\n        [0.847, 0.694, 0.996], // #d8b4fe\n        [0.941, 0.871, 1.000]  // #f0e7ff\n      ];\n      const colorIndex = Math.floor(Math.random() * colorVariations.length);\n      colors[i] = colorVariations[colorIndex][0];\n      colors[i + 1] = colorVariations[colorIndex][1];\n      colors[i + 2] = colorVariations[colorIndex][2];\n    }\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n\n    const material = new THREE.PointsMaterial({\n      size: 0.03,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.7,\n      sizeAttenuation: true,\n      blending: THREE.AdditiveBlending\n    });\n\n    const particles = new THREE.Points(geometry, material);\n    scene.add(particles);\n    particlesRef.current = particles;\n\n    // Mouse interaction\n    const handleMouseMove = (event) => {\n      mouseRef.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      if (particlesRef.current) {\n        const positions = particlesRef.current.geometry.attributes.position.array;\n        \n        // Update particle positions\n        for (let i = 0; i < positions.length; i += 3) {\n          // Add floating motion\n          positions[i] += velocities[i];\n          positions[i + 1] += velocities[i + 1];\n          positions[i + 2] += velocities[i + 2];\n\n          // Keep particles within bounds\n          const distance = Math.sqrt(positions[i] ** 2 + positions[i + 1] ** 2 + positions[i + 2] ** 2);\n          if (distance > 15) {\n            const scale = 15 / distance;\n            positions[i] *= scale;\n            positions[i + 1] *= scale;\n            positions[i + 2] *= scale;\n          }\n\n          // Mouse interaction - particles move away from mouse\n          const mouseInfluence = 0.1;\n          const dx = positions[i] - mouseRef.current.x * 10;\n          const dy = positions[i + 1] - mouseRef.current.y * 10;\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distanceToMouse < 3) {\n            const force = (3 - distanceToMouse) * mouseInfluence;\n            positions[i] += dx * force;\n            positions[i + 1] += dy * force;\n          }\n        }\n\n        particlesRef.current.geometry.attributes.position.needsUpdate = true;\n\n        // Gentle rotation\n        particlesRef.current.rotation.x += 0.0005;\n        particlesRef.current.rotation.y += 0.001;\n      }\n\n      // Subtle camera movement\n      camera.position.x = Math.sin(Date.now() * 0.00005) * 0.3;\n      camera.position.y = Math.cos(Date.now() * 0.00005) * 0.2;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ParticleBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}