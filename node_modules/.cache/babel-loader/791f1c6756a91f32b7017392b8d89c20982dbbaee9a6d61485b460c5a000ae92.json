{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ParticleBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const linesRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create flowing, luminous lines\n    const lineCount = 50;\n    const lines = [];\n    const lineGeometries = [];\n    const lineMaterials = [];\n    for (let i = 0; i < lineCount; i++) {\n      // Create curved line geometry\n      const points = [];\n      const segments = 50 + Math.floor(Math.random() * 30);\n\n      // Generate organic, flowing curve\n      let x = (Math.random() - 0.5) * 40;\n      let y = (Math.random() - 0.5) * 30;\n      let z = (Math.random() - 0.5) * 20;\n      for (let j = 0; j < segments; j++) {\n        const t = j / (segments - 1);\n\n        // Create organic, swirling motion\n        const swirlX = Math.sin(t * Math.PI * 4 + i * 0.5) * 2;\n        const swirlY = Math.cos(t * Math.PI * 3 + i * 0.3) * 1.5;\n        const swirlZ = Math.sin(t * Math.PI * 2 + i * 0.7) * 1;\n        x += (Math.random() - 0.5) * 0.5 + swirlX * 0.1;\n        y += (Math.random() - 0.5) * 0.3 + swirlY * 0.1;\n        z += (Math.random() - 0.5) * 0.2 + swirlZ * 0.1;\n        points.push(new THREE.Vector3(x, y, z));\n      }\n      const curve = new THREE.CatmullRomCurve3(points);\n      const geometry = new THREE.TubeGeometry(curve, segments, 0.05, 8, false);\n      lineGeometries.push(geometry);\n\n      // Create luminous material with gold tones\n      const material = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.6 + Math.random() * 0.3),\n        // Gold to amber\n        transparent: true,\n        opacity: 0.8 + Math.random() * 0.2,\n        emissive: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.4 + Math.random() * 0.3),\n        emissiveIntensity: 0.5 + Math.random() * 0.5\n      });\n      lineMaterials.push(material);\n      const line = new THREE.Mesh(geometry, material);\n      scene.add(line);\n      lines.push(line);\n    }\n    linesRef.current = lines;\n\n    // Add some circular vortex patterns\n    const vortexCount = 8;\n    for (let i = 0; i < vortexCount; i++) {\n      const vortexGeometry = new THREE.RingGeometry(0.5, 2 + Math.random() * 3, 32);\n      const vortexMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.7 + Math.random() * 0.3),\n        transparent: true,\n        opacity: 0.6 + Math.random() * 0.4,\n        side: THREE.DoubleSide\n      });\n      const vortex = new THREE.Mesh(vortexGeometry, vortexMaterial);\n      vortex.position.set((Math.random() - 0.5) * 30, (Math.random() - 0.5) * 20, (Math.random() - 0.5) * 10);\n      vortex.rotation.x = Math.PI / 2;\n      scene.add(vortex);\n      lines.push(vortex);\n    }\n\n    // Mouse interaction\n    const handleMouseMove = event => {\n      mouseRef.current.x = event.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      if (linesRef.current) {\n        // Animate each line with flowing motion\n        linesRef.current.forEach((line, index) => {\n          // Gentle rotation for organic movement\n          line.rotation.x += 0.001 + Math.random() * 0.002;\n          line.rotation.y += 0.002 + Math.random() * 0.003;\n          line.rotation.z += 0.001 + Math.random() * 0.001;\n\n          // Subtle position drift\n          line.position.x += Math.sin(Date.now() * 0.001 + index) * 0.01;\n          line.position.y += Math.cos(Date.now() * 0.001 + index) * 0.008;\n          line.position.z += Math.sin(Date.now() * 0.001 + index * 0.5) * 0.005;\n\n          // Keep lines within bounds\n          if (line.position.x > 25) line.position.x = -25;\n          if (line.position.x < -25) line.position.x = 25;\n          if (line.position.y > 20) line.position.y = -20;\n          if (line.position.y < -20) line.position.y = 20;\n          if (line.position.z > 15) line.position.z = -15;\n          if (line.position.z < -15) line.position.z = 15;\n\n          // Mouse interaction - lines gently flow toward cursor\n          const mouseInfluence = 0.003;\n          const dx = mouseRef.current.x * 20 - line.position.x;\n          const dy = mouseRef.current.y * 15 - line.position.y;\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          if (distanceToMouse < 8) {\n            const force = (8 - distanceToMouse) * mouseInfluence;\n            line.position.x += dx * force;\n            line.position.y += dy * force;\n          }\n        });\n      }\n\n      // Subtle camera movement for parallax effect\n      camera.position.x = Math.sin(Date.now() * 0.00002) * 0.5;\n      camera.position.y = Math.cos(Date.now() * 0.000015) * 0.3;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleBackground, \"6JdpyZPAebZ8JgulD2gBkyfOVQA=\");\n_c = ParticleBackground;\nexport default ParticleBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticleBackground\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ParticleBackground","_s","mountRef","sceneRef","rendererRef","linesRef","animationIdRef","mouseRef","x","y","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","lineCount","lines","lineGeometries","lineMaterials","i","points","segments","floor","random","z","j","t","swirlX","sin","PI","swirlY","cos","swirlZ","push","Vector3","curve","CatmullRomCurve3","geometry","TubeGeometry","material","MeshBasicMaterial","color","Color","setHSL","transparent","opacity","emissive","emissiveIntensity","line","Mesh","add","vortexCount","vortexGeometry","RingGeometry","vortexMaterial","side","DoubleSide","vortex","rotation","handleMouseMove","event","clientX","clientY","addEventListener","appendChild","domElement","animate","requestAnimationFrame","forEach","index","Date","now","mouseInfluence","dx","dy","distanceToMouse","sqrt","force","render","handleResize","aspect","updateProjectionMatrix","currentMount","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ParticleBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ParticleBackground = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const linesRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 0, 15);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Create flowing, luminous lines\n    const lineCount = 50;\n    const lines = [];\n    const lineGeometries = [];\n    const lineMaterials = [];\n\n    for (let i = 0; i < lineCount; i++) {\n      // Create curved line geometry\n      const points = [];\n      const segments = 50 + Math.floor(Math.random() * 30);\n      \n      // Generate organic, flowing curve\n      let x = (Math.random() - 0.5) * 40;\n      let y = (Math.random() - 0.5) * 30;\n      let z = (Math.random() - 0.5) * 20;\n      \n      for (let j = 0; j < segments; j++) {\n        const t = j / (segments - 1);\n        \n        // Create organic, swirling motion\n        const swirlX = Math.sin(t * Math.PI * 4 + i * 0.5) * 2;\n        const swirlY = Math.cos(t * Math.PI * 3 + i * 0.3) * 1.5;\n        const swirlZ = Math.sin(t * Math.PI * 2 + i * 0.7) * 1;\n        \n        x += (Math.random() - 0.5) * 0.5 + swirlX * 0.1;\n        y += (Math.random() - 0.5) * 0.3 + swirlY * 0.1;\n        z += (Math.random() - 0.5) * 0.2 + swirlZ * 0.1;\n        \n        points.push(new THREE.Vector3(x, y, z));\n      }\n      \n      const curve = new THREE.CatmullRomCurve3(points);\n      const geometry = new THREE.TubeGeometry(curve, segments, 0.05, 8, false);\n      lineGeometries.push(geometry);\n      \n      // Create luminous material with gold tones\n      const material = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.6 + Math.random() * 0.3), // Gold to amber\n        transparent: true,\n        opacity: 0.8 + Math.random() * 0.2,\n        emissive: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.4 + Math.random() * 0.3),\n        emissiveIntensity: 0.5 + Math.random() * 0.5\n      });\n      \n      lineMaterials.push(material);\n      \n      const line = new THREE.Mesh(geometry, material);\n      scene.add(line);\n      lines.push(line);\n    }\n\n    linesRef.current = lines;\n\n    // Add some circular vortex patterns\n    const vortexCount = 8;\n    for (let i = 0; i < vortexCount; i++) {\n      const vortexGeometry = new THREE.RingGeometry(0.5, 2 + Math.random() * 3, 32);\n      const vortexMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color().setHSL(0.12 + Math.random() * 0.05, 0.8, 0.7 + Math.random() * 0.3),\n        transparent: true,\n        opacity: 0.6 + Math.random() * 0.4,\n        side: THREE.DoubleSide\n      });\n      \n      const vortex = new THREE.Mesh(vortexGeometry, vortexMaterial);\n      vortex.position.set(\n        (Math.random() - 0.5) * 30,\n        (Math.random() - 0.5) * 20,\n        (Math.random() - 0.5) * 10\n      );\n      vortex.rotation.x = Math.PI / 2;\n      scene.add(vortex);\n      lines.push(vortex);\n    }\n\n    // Mouse interaction\n    const handleMouseMove = (event) => {\n      mouseRef.current.x = (event.clientX / window.innerWidth) * 2 - 1;\n      mouseRef.current.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      if (linesRef.current) {\n        // Animate each line with flowing motion\n        linesRef.current.forEach((line, index) => {\n          // Gentle rotation for organic movement\n          line.rotation.x += 0.001 + Math.random() * 0.002;\n          line.rotation.y += 0.002 + Math.random() * 0.003;\n          line.rotation.z += 0.001 + Math.random() * 0.001;\n          \n          // Subtle position drift\n          line.position.x += Math.sin(Date.now() * 0.001 + index) * 0.01;\n          line.position.y += Math.cos(Date.now() * 0.001 + index) * 0.008;\n          line.position.z += Math.sin(Date.now() * 0.001 + index * 0.5) * 0.005;\n          \n          // Keep lines within bounds\n          if (line.position.x > 25) line.position.x = -25;\n          if (line.position.x < -25) line.position.x = 25;\n          if (line.position.y > 20) line.position.y = -20;\n          if (line.position.y < -20) line.position.y = 20;\n          if (line.position.z > 15) line.position.z = -15;\n          if (line.position.z < -15) line.position.z = 15;\n          \n          // Mouse interaction - lines gently flow toward cursor\n          const mouseInfluence = 0.003;\n          const dx = mouseRef.current.x * 20 - line.position.x;\n          const dy = mouseRef.current.y * 15 - line.position.y;\n          const distanceToMouse = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distanceToMouse < 8) {\n            const force = (8 - distanceToMouse) * mouseInfluence;\n            line.position.x += dx * force;\n            line.position.y += dy * force;\n          }\n        });\n      }\n\n      // Subtle camera movement for parallax effect\n      camera.position.x = Math.sin(Date.now() * 0.00002) * 0.5;\n      camera.position.y = Math.cos(Date.now() * 0.000015) * 0.3;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ParticleBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}