{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ThreeDText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/addons/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/addons/geometries/TextGeometry.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDText = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const textMeshRef = useRef(null);\n  const groupRef = useRef(null);\n  const animationIdRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 1500);\n    camera.position.set(0, 0, 700);\n    camera.lookAt(0, 0, 0);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Lights\n    const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    dirLight.position.set(0, 0, 1).normalize();\n    scene.add(dirLight);\n    const pointLight = new THREE.PointLight(0xffffff, 2, 0, 0);\n    pointLight.color.setHSL(0.12, 1, 0.7); // Gold color\n    pointLight.position.set(0, 100, 90);\n    scene.add(pointLight);\n\n    // Materials\n    const materials = [new THREE.MeshPhongMaterial({\n      color: 0xCC9933,\n      // Muted gold\n      flatShading: true,\n      transparent: true,\n      opacity: 0.9\n    }),\n    // front\n    new THREE.MeshPhongMaterial({\n      color: 0x8B7355,\n      // Darker gold for sides\n      transparent: true,\n      opacity: 0.8\n    }) // side\n    ];\n\n    // Group for text\n    const group = new THREE.Group();\n    group.position.y = 0;\n    scene.add(group);\n    groupRef.current = group;\n\n    // Text parameters\n    const text = \"Hi! I'm Saaketh\";\n    const size = 40;\n    const depth = 8;\n    const hover = 0;\n    const curveSegments = 4;\n    const bevelThickness = 1;\n    const bevelSize = 0.5;\n    const bevelEnabled = true;\n\n    // Load font and create text\n    const loader = new FontLoader();\n    loader.load('/fonts/optimer_bold.typeface.json', function (font) {\n      const textGeo = new TextGeometry(text, {\n        font: font,\n        size: size,\n        depth: depth,\n        curveSegments: curveSegments,\n        bevelThickness: bevelThickness,\n        bevelSize: bevelSize,\n        bevelEnabled: bevelEnabled\n      });\n      textGeo.computeBoundingBox();\n      const centerOffset = -0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x);\n      const textMesh = new THREE.Mesh(textGeo, materials);\n      textMesh.position.x = centerOffset;\n      textMesh.position.y = hover;\n      textMesh.position.z = 0;\n      group.add(textMesh);\n      textMeshRef.current = textMesh;\n    });\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      if (groupRef.current) {\n        // Gentle rotation for dynamic effect\n        groupRef.current.rotation.y += 0.005;\n        groupRef.current.rotation.x = Math.sin(Date.now() * 0.001) * 0.1;\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeDText, \"o1wYiGnt+CaWsT63sBd0CfUawFM=\");\n_c = ThreeDText;\nexport default ThreeDText;\nvar _c;\n$RefreshReg$(_c, \"ThreeDText\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","FontLoader","TextGeometry","jsxDEV","_jsxDEV","ThreeDText","_s","mountRef","sceneRef","rendererRef","textMeshRef","groupRef","animationIdRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","dirLight","DirectionalLight","normalize","add","pointLight","PointLight","color","setHSL","materials","MeshPhongMaterial","flatShading","transparent","opacity","group","Group","y","text","size","depth","hover","curveSegments","bevelThickness","bevelSize","bevelEnabled","loader","load","font","textGeo","computeBoundingBox","centerOffset","boundingBox","max","x","textMesh","Mesh","z","appendChild","domElement","animate","requestAnimationFrame","rotation","sin","Date","now","render","handleResize","aspect","updateProjectionMatrix","addEventListener","currentMount","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","transform","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ThreeDText.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/addons/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/addons/geometries/TextGeometry.js';\n\nconst ThreeDText = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const textMeshRef = useRef(null);\n  const groupRef = useRef(null);\n  const animationIdRef = useRef(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 1500);\n    camera.position.set(0, 0, 700);\n    camera.lookAt(0, 0, 0);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Lights\n    const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    dirLight.position.set(0, 0, 1).normalize();\n    scene.add(dirLight);\n\n    const pointLight = new THREE.PointLight(0xffffff, 2, 0, 0);\n    pointLight.color.setHSL(0.12, 1, 0.7); // Gold color\n    pointLight.position.set(0, 100, 90);\n    scene.add(pointLight);\n\n    // Materials\n    const materials = [\n      new THREE.MeshPhongMaterial({ \n        color: 0xCC9933, // Muted gold\n        flatShading: true,\n        transparent: true,\n        opacity: 0.9\n      }), // front\n      new THREE.MeshPhongMaterial({ \n        color: 0x8B7355, // Darker gold for sides\n        transparent: true,\n        opacity: 0.8\n      }) // side\n    ];\n\n    // Group for text\n    const group = new THREE.Group();\n    group.position.y = 0;\n    scene.add(group);\n    groupRef.current = group;\n\n    // Text parameters\n    const text = \"Hi! I'm Saaketh\";\n    const size = 40;\n    const depth = 8;\n    const hover = 0;\n    const curveSegments = 4;\n    const bevelThickness = 1;\n    const bevelSize = 0.5;\n    const bevelEnabled = true;\n\n    // Load font and create text\n    const loader = new FontLoader();\n    loader.load('/fonts/optimer_bold.typeface.json', function (font) {\n      const textGeo = new TextGeometry(text, {\n        font: font,\n        size: size,\n        depth: depth,\n        curveSegments: curveSegments,\n        bevelThickness: bevelThickness,\n        bevelSize: bevelSize,\n        bevelEnabled: bevelEnabled\n      });\n\n      textGeo.computeBoundingBox();\n      const centerOffset = -0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x);\n\n      const textMesh = new THREE.Mesh(textGeo, materials);\n      textMesh.position.x = centerOffset;\n      textMesh.position.y = hover;\n      textMesh.position.z = 0;\n\n      group.add(textMesh);\n      textMeshRef.current = textMesh;\n    });\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      if (groupRef.current) {\n        // Gentle rotation for dynamic effect\n        groupRef.current.rotation.y += 0.005;\n        groupRef.current.rotation.x = Math.sin(Date.now() * 0.001) * 0.1;\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '100%',\n        height: '100%',\n        zIndex: 1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ThreeDText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}