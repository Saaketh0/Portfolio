{"ast":null,"code":"var _jsxFileName = \"/Users/saake/Portfolio/src/ThreeDText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDText = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const groupRef = useRef(null);\n  const animationIdRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 200);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Lights\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n    const pointLight = new THREE.PointLight(0xCC9933, 1, 1000);\n    pointLight.position.set(0, 0, 100);\n    scene.add(pointLight);\n\n    // Group for text\n    const group = new THREE.Group();\n    scene.add(group);\n    groupRef.current = group;\n\n    // Create 3D text using custom letter shapes\n    const text = \"Hi! I'm Saaketh\";\n    const letters = text.split('');\n    let currentX = 0;\n    letters.forEach((letter, index) => {\n      if (letter === ' ') {\n        currentX += 20; // Space between words\n        return;\n      }\n      let letterGroup = new THREE.Group();\n      let letterGeometry;\n\n      // Create actual letter shapes\n      switch (letter.toLowerCase()) {\n        case 'h':\n          // H shape - two vertical bars connected by horizontal bar\n          const hLeft = new THREE.Mesh(new THREE.BoxGeometry(8, 24, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          hLeft.position.set(-8, 0, 0);\n          letterGroup.add(hLeft);\n          const hRight = new THREE.Mesh(new THREE.BoxGeometry(8, 24, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          hRight.position.set(8, 0, 0);\n          letterGroup.add(hRight);\n          const hMiddle = new THREE.Mesh(new THREE.BoxGeometry(16, 6, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          hMiddle.position.set(0, 0, 0);\n          letterGroup.add(hMiddle);\n          break;\n        case 'i':\n          // I shape - vertical bar with dot on top\n          const iBar = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          iBar.position.set(0, 0, 0);\n          letterGroup.add(iBar);\n          const iDot = new THREE.Mesh(new THREE.BoxGeometry(6, 6, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          iDot.position.set(0, 12, 0);\n          letterGroup.add(iDot);\n          break;\n        case '!':\n          // Exclamation mark - vertical bar with dot below\n          const exBar = new THREE.Mesh(new THREE.BoxGeometry(6, 18, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          exBar.position.set(0, 2, 0);\n          letterGroup.add(exBar);\n          const exDot = new THREE.Mesh(new THREE.BoxGeometry(6, 6, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          exDot.position.set(0, -10, 0);\n          letterGroup.add(exDot);\n          break;\n        case \"'\":\n          // Apostrophe - small dot\n          letterGeometry = new THREE.BoxGeometry(4, 6, 8);\n          break;\n        case 'm':\n          // M shape - three vertical bars with diagonal connections\n          const mLeft = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          mLeft.position.set(-12, 0, 0);\n          letterGroup.add(mLeft);\n          const mRight = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          mRight.position.set(12, 0, 0);\n          letterGroup.add(mRight);\n          const mMiddle = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          mMiddle.position.set(0, 0, 0);\n          letterGroup.add(mMiddle);\n\n          // Diagonal connections\n          const mDiag1 = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          mDiag1.position.set(-6, 6, 0);\n          mDiag1.rotation.z = Math.PI / 6;\n          letterGroup.add(mDiag1);\n          const mDiag2 = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          mDiag2.position.set(6, 6, 0);\n          mDiag2.rotation.z = -Math.PI / 6;\n          letterGroup.add(mDiag2);\n          break;\n        case 's':\n          // S shape - curved using multiple segments\n          for (let i = 0; i < 5; i++) {\n            const sSegment = new THREE.Mesh(new THREE.BoxGeometry(4, 4, 8), new THREE.MeshPhongMaterial({\n              color: 0xCC9933,\n              transparent: true,\n              opacity: 0.9\n            }));\n            sSegment.position.set(Math.sin(i * Math.PI / 2) * 8, Math.cos(i * Math.PI / 2) * 6 - 6, 0);\n            letterGroup.add(sSegment);\n          }\n          break;\n        case 'a':\n          // A shape - two diagonal bars with horizontal crossbar\n          const aLeft = new THREE.Mesh(new THREE.BoxGeometry(4, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          aLeft.position.set(-6, 0, 0);\n          aLeft.rotation.z = Math.PI / 6;\n          letterGroup.add(aLeft);\n          const aRight = new THREE.Mesh(new THREE.BoxGeometry(4, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          aRight.position.set(6, 0, 0);\n          aRight.rotation.z = -Math.PI / 6;\n          letterGroup.add(aRight);\n          const aCross = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          aCross.position.set(0, 0, 0);\n          letterGroup.add(aCross);\n          break;\n        case 'k':\n          // K shape - vertical bar with two diagonal branches\n          const kBar = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          kBar.position.set(-3, 0, 0);\n          letterGroup.add(kBar);\n          const kTop = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          kTop.position.set(3, 6, 0);\n          kTop.rotation.z = -Math.PI / 4;\n          letterGroup.add(kTop);\n          const kBottom = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          kBottom.position.set(3, -6, 0);\n          kBottom.rotation.z = Math.PI / 4;\n          letterGroup.add(kBottom);\n          break;\n        case 'e':\n          // E shape - vertical bar with three horizontal bars\n          const eBar = new THREE.Mesh(new THREE.BoxGeometry(6, 20, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          eBar.position.set(-3, 0, 0);\n          letterGroup.add(eBar);\n          const eTop = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          eTop.position.set(3, 8, 0);\n          letterGroup.add(eTop);\n          const eMiddle = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          eMiddle.position.set(3, 0, 0);\n          letterGroup.add(eMiddle);\n          const eBottom = new THREE.Mesh(new THREE.BoxGeometry(12, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          eBottom.position.set(3, -8, 0);\n          letterGroup.add(eBottom);\n          break;\n        case 't':\n          // T shape - horizontal bar with vertical bar\n          const tTop = new THREE.Mesh(new THREE.BoxGeometry(16, 4, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          tTop.position.set(0, 8, 0);\n          letterGroup.add(tTop);\n          const tBar = new THREE.Mesh(new THREE.BoxGeometry(4, 16, 8), new THREE.MeshPhongMaterial({\n            color: 0xCC9933,\n            transparent: true,\n            opacity: 0.9\n          }));\n          tBar.position.set(0, 0, 0);\n          letterGroup.add(tBar);\n          break;\n        default:\n          // Default letter - simple rectangle\n          letterGeometry = new THREE.BoxGeometry(12, 20, 8);\n      }\n\n      // If we have a simple geometry, create the mesh\n      if (letterGeometry) {\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xCC9933,\n          transparent: true,\n          opacity: 0.9,\n          shininess: 100\n        });\n        const letterMesh = new THREE.Mesh(letterGeometry, material);\n        letterGroup.add(letterMesh);\n      }\n\n      // Position the letter group\n      letterGroup.position.x = currentX;\n      letterGroup.position.y = 0;\n      letterGroup.position.z = 0;\n      group.add(letterGroup);\n\n      // Update position for next letter\n      if (letter === '!') {\n        currentX += 20;\n      } else if (letter === \"'\") {\n        currentX += 12;\n      } else if (letter === 'h' || letter === 'm') {\n        currentX += 30;\n      } else if (letter === 's' || letter === 'a' || letter === 'k') {\n        currentX += 25;\n      } else if (letter === 'e' || letter === 't') {\n        currentX += 22;\n      } else {\n        currentX += 18;\n      }\n    });\n\n    // Center the entire text group\n    group.position.x = -currentX / 2;\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop - no movement, just render\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '100%',\n      height: '100%',\n      zIndex: 1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeDText, \"QE2YSX/KrTRu2KahOsJdVpk/z0c=\");\n_c = ThreeDText;\nexport default ThreeDText;\nvar _c;\n$RefreshReg$(_c, \"ThreeDText\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ThreeDText","_s","mountRef","sceneRef","rendererRef","groupRef","animationIdRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","powerPreference","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","pointLight","PointLight","group","Group","text","letters","split","currentX","forEach","letter","index","letterGroup","letterGeometry","toLowerCase","hLeft","Mesh","BoxGeometry","MeshPhongMaterial","color","transparent","opacity","hRight","hMiddle","iBar","iDot","exBar","exDot","mLeft","mRight","mMiddle","mDiag1","rotation","z","PI","mDiag2","i","sSegment","sin","cos","aLeft","aRight","aCross","kBar","kTop","kBottom","eBar","eTop","eMiddle","eBottom","tTop","tBar","material","shininess","letterMesh","x","y","appendChild","domElement","animate","requestAnimationFrame","render","handleResize","aspect","updateProjectionMatrix","addEventListener","currentMount","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","style","top","left","transform","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saake/Portfolio/src/ThreeDText.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeDText = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const groupRef = useRef(null);\n  const animationIdRef = useRef(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 200);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      alpha: true,\n      antialias: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x000000, 0);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    rendererRef.current = renderer;\n\n    // Lights\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n\n    const pointLight = new THREE.PointLight(0xCC9933, 1, 1000);\n    pointLight.position.set(0, 0, 100);\n    scene.add(pointLight);\n\n    // Group for text\n    const group = new THREE.Group();\n    scene.add(group);\n    groupRef.current = group;\n\n    // Create 3D text using custom letter shapes\n    const text = \"Hi! I'm Saaketh\";\n    const letters = text.split('');\n    let currentX = 0;\n\n    letters.forEach((letter, index) => {\n      if (letter === ' ') {\n        currentX += 20; // Space between words\n        return;\n      }\n\n      let letterGroup = new THREE.Group();\n      let letterGeometry;\n\n      // Create actual letter shapes\n      switch (letter.toLowerCase()) {\n        case 'h':\n          // H shape - two vertical bars connected by horizontal bar\n          const hLeft = new THREE.Mesh(\n            new THREE.BoxGeometry(8, 24, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          hLeft.position.set(-8, 0, 0);\n          letterGroup.add(hLeft);\n\n          const hRight = new THREE.Mesh(\n            new THREE.BoxGeometry(8, 24, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          hRight.position.set(8, 0, 0);\n          letterGroup.add(hRight);\n\n          const hMiddle = new THREE.Mesh(\n            new THREE.BoxGeometry(16, 6, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          hMiddle.position.set(0, 0, 0);\n          letterGroup.add(hMiddle);\n          break;\n\n        case 'i':\n          // I shape - vertical bar with dot on top\n          const iBar = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          iBar.position.set(0, 0, 0);\n          letterGroup.add(iBar);\n\n          const iDot = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 6, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          iDot.position.set(0, 12, 0);\n          letterGroup.add(iDot);\n          break;\n\n        case '!':\n          // Exclamation mark - vertical bar with dot below\n          const exBar = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 18, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          exBar.position.set(0, 2, 0);\n          letterGroup.add(exBar);\n\n          const exDot = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 6, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          exDot.position.set(0, -10, 0);\n          letterGroup.add(exDot);\n          break;\n\n        case \"'\":\n          // Apostrophe - small dot\n          letterGeometry = new THREE.BoxGeometry(4, 6, 8);\n          break;\n\n        case 'm':\n          // M shape - three vertical bars with diagonal connections\n          const mLeft = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          mLeft.position.set(-12, 0, 0);\n          letterGroup.add(mLeft);\n\n          const mRight = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          mRight.position.set(12, 0, 0);\n          letterGroup.add(mRight);\n\n          const mMiddle = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          mMiddle.position.set(0, 0, 0);\n          letterGroup.add(mMiddle);\n\n          // Diagonal connections\n          const mDiag1 = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          mDiag1.position.set(-6, 6, 0);\n          mDiag1.rotation.z = Math.PI / 6;\n          letterGroup.add(mDiag1);\n\n          const mDiag2 = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          mDiag2.position.set(6, 6, 0);\n          mDiag2.rotation.z = -Math.PI / 6;\n          letterGroup.add(mDiag2);\n          break;\n\n        case 's':\n          // S shape - curved using multiple segments\n          for (let i = 0; i < 5; i++) {\n            const sSegment = new THREE.Mesh(\n              new THREE.BoxGeometry(4, 4, 8),\n              new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n            );\n            sSegment.position.set(\n              Math.sin(i * Math.PI / 2) * 8,\n              Math.cos(i * Math.PI / 2) * 6 - 6,\n              0\n            );\n            letterGroup.add(sSegment);\n          }\n          break;\n\n        case 'a':\n          // A shape - two diagonal bars with horizontal crossbar\n          const aLeft = new THREE.Mesh(\n            new THREE.BoxGeometry(4, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          aLeft.position.set(-6, 0, 0);\n          aLeft.rotation.z = Math.PI / 6;\n          letterGroup.add(aLeft);\n\n          const aRight = new THREE.Mesh(\n            new THREE.BoxGeometry(4, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          aRight.position.set(6, 0, 0);\n          aRight.rotation.z = -Math.PI / 6;\n          letterGroup.add(aRight);\n\n          const aCross = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          aCross.position.set(0, 0, 0);\n          letterGroup.add(aCross);\n          break;\n\n        case 'k':\n          // K shape - vertical bar with two diagonal branches\n          const kBar = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          kBar.position.set(-3, 0, 0);\n          letterGroup.add(kBar);\n\n          const kTop = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          kTop.position.set(3, 6, 0);\n          kTop.rotation.z = -Math.PI / 4;\n          letterGroup.add(kTop);\n\n          const kBottom = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          kBottom.position.set(3, -6, 0);\n          kBottom.rotation.z = Math.PI / 4;\n          letterGroup.add(kBottom);\n          break;\n\n        case 'e':\n          // E shape - vertical bar with three horizontal bars\n          const eBar = new THREE.Mesh(\n            new THREE.BoxGeometry(6, 20, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          eBar.position.set(-3, 0, 0);\n          letterGroup.add(eBar);\n\n          const eTop = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          eTop.position.set(3, 8, 0);\n          letterGroup.add(eTop);\n\n          const eMiddle = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          eMiddle.position.set(3, 0, 0);\n          letterGroup.add(eMiddle);\n\n          const eBottom = new THREE.Mesh(\n            new THREE.BoxGeometry(12, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          eBottom.position.set(3, -8, 0);\n          letterGroup.add(eBottom);\n          break;\n\n        case 't':\n          // T shape - horizontal bar with vertical bar\n          const tTop = new THREE.Mesh(\n            new THREE.BoxGeometry(16, 4, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          tTop.position.set(0, 8, 0);\n          letterGroup.add(tTop);\n\n          const tBar = new THREE.Mesh(\n            new THREE.BoxGeometry(4, 16, 8),\n            new THREE.MeshPhongMaterial({ color: 0xCC9933, transparent: true, opacity: 0.9 })\n          );\n          tBar.position.set(0, 0, 0);\n          letterGroup.add(tBar);\n          break;\n\n        default:\n          // Default letter - simple rectangle\n          letterGeometry = new THREE.BoxGeometry(12, 20, 8);\n      }\n\n      // If we have a simple geometry, create the mesh\n      if (letterGeometry) {\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xCC9933,\n          transparent: true,\n          opacity: 0.9,\n          shininess: 100\n        });\n        const letterMesh = new THREE.Mesh(letterGeometry, material);\n        letterGroup.add(letterMesh);\n      }\n\n      // Position the letter group\n      letterGroup.position.x = currentX;\n      letterGroup.position.y = 0;\n      letterGroup.position.z = 0;\n\n      group.add(letterGroup);\n\n      // Update position for next letter\n      if (letter === '!') {\n        currentX += 20;\n      } else if (letter === \"'\") {\n        currentX += 12;\n      } else if (letter === 'h' || letter === 'm') {\n        currentX += 30;\n      } else if (letter === 's' || letter === 'a' || letter === 'k') {\n        currentX += 25;\n      } else if (letter === 'e' || letter === 't') {\n        currentX += 22;\n      } else {\n        currentX += 18;\n      }\n    });\n\n    // Center the entire text group\n    group.position.x = -currentX / 2;\n\n    // Add to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Animation loop - no movement, just render\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      const currentMount = mountRef.current;\n      window.removeEventListener('resize', handleResize);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      if (currentMount && renderer.domElement) {\n        currentMount.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mountRef} \n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '100%',\n        height: '100%',\n        zIndex: 1,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default ThreeDText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}